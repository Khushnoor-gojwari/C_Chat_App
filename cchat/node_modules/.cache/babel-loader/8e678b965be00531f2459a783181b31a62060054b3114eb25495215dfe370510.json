{"ast":null,"code":"var _jsxFileName = \"/home/khuram/CCHAT  APP/cchat/src/component/Chat/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { user } from \"../Join/Join\"; // Ensure this path is correct\nimport socketIo from \"socket.io-client\";\nimport \"./Chat.css\";\nimport sendLogo from \"../../images/send.png\";\nimport Message from \"../Message/Message\";\nimport ReactScrollToBottom from \"react-scroll-to-bottom\";\nimport closeIcon from \"../../images/closeIcon.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"http://localhost:5000\"; // Replace with your backend server URL\nlet socket;\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]); // State for storing messages\n  const [message, setMessage] = useState(\"\"); // State for input message\n  const [userName, setUserName] = useState(user);\n  useEffect(() => {\n    // Connect to Socket.IO server\n    socket = socketIo(ENDPOINT, {\n      transports: ['websocket']\n    });\n\n    // Listen for incoming messages from the server\n    socket.on('message', data => {\n      setMessages(prevMessages => [...prevMessages, data]); // Functional update\n    });\n    return () => {\n      socket.disconnect(); // Clean up the connection when component unmounts\n    };\n  }, []); // Empty dependency array means this effect runs once on component mount\n\n  const sendMessage = () => {\n    if (message) {\n      socket.emit('sendMessage', {\n        user: userName,\n        message\n      }); // Send message to server\n      setMessage(\"\"); // Clear the input after sending\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatPage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Chat Application\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: closeIcon,\n            alt: \"Close Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactScrollToBottom, {\n        className: \"chatBox\",\n        children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(Message, {\n          user: msg.user,\n          message: msg.message\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          className: \"sendBtn\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: sendLogo,\n            alt: \"Send Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"6JlcwA7aPaYCGKd14PA6CyeCfss=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","user","socketIo","sendLogo","Message","ReactScrollToBottom","closeIcon","jsxDEV","_jsxDEV","ENDPOINT","socket","Chat","_s","messages","setMessages","message","setMessage","userName","setUserName","transports","on","data","prevMessages","disconnect","sendMessage","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","src","alt","map","msg","i","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/khuram/CCHAT  APP/cchat/src/component/Chat/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { user } from \"../Join/Join\"; // Ensure this path is correct\nimport socketIo from \"socket.io-client\";\nimport \"./Chat.css\";\nimport sendLogo from \"../../images/send.png\";\nimport Message from \"../Message/Message\";\nimport ReactScrollToBottom from \"react-scroll-to-bottom\";\nimport closeIcon from \"../../images/closeIcon.png\";\n\nconst ENDPOINT = \"http://localhost:5000\"; // Replace with your backend server URL\nlet socket;\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([]); // State for storing messages\n  const [message, setMessage] = useState(\"\");   // State for input message\n  const [userName, setUserName] = useState(user);\n\n  useEffect(() => {\n    // Connect to Socket.IO server\n    socket = socketIo(ENDPOINT, { transports: ['websocket'] });\n\n    // Listen for incoming messages from the server\n    socket.on('message', (data) => {\n      setMessages((prevMessages) => [...prevMessages, data]); // Functional update\n    });\n\n    return () => {\n      socket.disconnect(); // Clean up the connection when component unmounts\n    };\n  }, []); // Empty dependency array means this effect runs once on component mount\n\n  const sendMessage = () => {\n    if (message) {\n      socket.emit('sendMessage', { user: userName, message }); // Send message to server\n      setMessage(\"\"); // Clear the input after sending\n    }\n  };\n\n  return (\n    <div className=\"chatPage\">\n      <div className=\"chatContainer\">\n        <div className=\"header\">\n          <h2>Chat Application</h2>\n          <a href=\"/\"><img src={closeIcon} alt=\"Close Icon\" /></a>\n        </div>\n        <ReactScrollToBottom className=\"chatBox\">\n          {messages.map((msg, i) => (\n            <Message key={i} user={msg.user} message={msg.message} />\n          ))}\n        </ReactScrollToBottom>\n        <div className=\"inputBox\">\n          <input \n            type=\"text\" \n            value={message} \n            onChange={(e) => setMessage(e.target.value)} \n            placeholder=\"Type a message...\"\n          />\n          <button onClick={sendMessage} className=\"sendBtn\">\n            <img src={sendLogo} alt=\"Send Icon\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}